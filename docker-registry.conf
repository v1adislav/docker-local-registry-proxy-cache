upstream  registry{
    server   127.0.0.1:8080;
}
### HTTPS server
server {

    listen 443 ssl;
    include ssl_dist.conf;
    server_name         docker-registry.test.ru;

    real_ip_header      X-Forwarded-For;

    if ($request_method ~* ^(OPTIONS|HEAD)$) {
        return 204;
    }

    location / {
        proxy_set_header        Host            $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        Proxy "";
        proxy_set_header        owner-id   $http_owner_id;   # Pass owner-id header from request
        proxy_set_header        X-Forwarded-Proto  https;
        proxy_send_timeout      10m;
        send_timeout            10m;
        proxy_read_timeout      60m;
        proxy_request_buffering off; # Увеличить лимиты idle-подключения
        # proxy_connect_timeout 159s;
        client_max_body_size 2000M;

        error_log  /var/log/nginx/docker-registry.test.ru.error.log;
        access_log /var/log/nginx/docker-registry.test.ru.access.log;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000;";
        add_header Cache-Control public;

        proxy_pass http://registry;

    }

}
### HTTP server
server {
    listen 80;
    server_name         docker-registry.test.ru;
    return 301 https://$host$request_uri;
}
